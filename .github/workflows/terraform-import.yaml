# .github/workflows/terraform-import.yaml
name: Terraform Import Resource

on:
  workflow_dispatch:
    inputs:
      resource_address:
        description: 'Endereço do recurso no Terraform (ex: aws_s3_bucket.my_bucket)'
        required: true
        type: string
      resource_id:
        description: 'ID real do recurso na AWS (ex: my-bucket-name ou um ARN para IAM Policies)'
        required: true
        type: string
      terraform_state_key:
        description: 'Caminho completo da chave do state file S3 (ex: env:/dev/terraform-infra-pipeline-aws/terraform.tfstate)'
        required: true
        type: string
        default: 'env:/prod/terraform-infra-pipeline-aws'
      aws_region:
        description: 'Região AWS para o Terraform'
        required: true
        type: string
        default: 'sa-east-1'
      terraform_working_directory:
        description: 'Subdiretório onde os arquivos .tf estão (ex: "terraform" ou "src/infra")'
        required: false
        type: string
        default: 'infra'

permissions:
  id-token: write # Necessário para OIDC
  contents: read  # Necessário para checkout do código

jobs:
  import_resource:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::533267324332:role/github-actions-ordepzero-role 
          aws-region: ${{ github.event.inputs.aws_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3 

      - name: Terraform Init
        working-directory: ${{ github.event.inputs.terraform_working_directory }}
        run: |
          terraform init \
            -backend-config="bucket=ordepzero-sa-east-1-terraform-statefile" \
            -backend-config="key=${{ github.event.inputs.terraform_state_key }}" \
            -backend-config="region=${{ github.event.inputs.aws_region }}" \
            -backend-config="dynamodb_table=ordepzero-sa-east-1-terraform-lock" \
            -upgrade 

      - name: Create Terraform Variables File
        working-directory: ${{ github.event.inputs.terraform_working_directory }}
        run: |
          cat <<EOF > import-vars.tfvars
          enviroment = "prod"
          bucket_name_bovespa_raw = "prod-sa-east-1-bovespa-raw"
          bucket_name_bovespa_refined = "prod-sa-east-1-bovespa-refined"
          EOF
        shell: bash # Garante que o heredoc funcione corretamente

      - name: Perform Terraform Import
        working-directory: ${{ github.event.inputs.terraform_working_directory }}
        run: terraform import -var-file="import-vars.tfvars" ${{ github.event.inputs.resource_address }} ${{ github.event.inputs.resource_id }}
        id: import_step

      - name: Check Import Result (Optional)
        if: steps.import_step.outcome == 'success'
        run: |
          echo "✅ Resource '${{ github.event.inputs.resource_address }}' with ID '${{ github.event.inputs.resource_id }}' imported successfully!"
          echo "Now, run 'terraform plan' in your main pipeline to verify the state."
        shell: bash